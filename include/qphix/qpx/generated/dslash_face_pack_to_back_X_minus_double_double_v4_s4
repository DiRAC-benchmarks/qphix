vector4double b_S0_C0_RE = vec_splats(0.0);
vector4double b_S0_C0_IM = vec_splats(0.0);
vector4double b_S0_C1_RE = vec_splats(0.0);
vector4double b_S0_C1_IM = vec_splats(0.0);
vector4double b_S0_C2_RE = vec_splats(0.0);
vector4double b_S0_C2_IM = vec_splats(0.0);
vector4double b_S1_C0_RE = vec_splats(0.0);
vector4double b_S1_C0_IM = vec_splats(0.0);
vector4double b_S1_C1_RE = vec_splats(0.0);
vector4double b_S1_C1_IM = vec_splats(0.0);
vector4double b_S1_C2_RE = vec_splats(0.0);
vector4double b_S1_C2_IM = vec_splats(0.0);
vector4double psi_S0_RE = vec_splats(0.0);
vector4double psi_S0_IM = vec_splats(0.0);
vector4double psi_S1_RE = vec_splats(0.0);
vector4double psi_S1_IM = vec_splats(0.0);
vector4double tmp_1_re = vec_splats(0.0);
vector4double tmp_1_im = vec_splats(0.0);
vector4double tmp_2_re = vec_splats(0.0);
vector4double tmp_2_im = vec_splats(0.0);
vector4double tmp_3_re = vec_splats(0.0);
vector4double tmp_3_im = vec_splats(0.0);
vector4double tmp_4_re = vec_splats(0.0);
vector4double tmp_4_im = vec_splats(0.0);
vector4double zero = vec_splats(0.0);
zero = vec_splats(0.0); 
vector4double accMask;

accMask = _v4d_int2mask(mask);




psi_S0_RE =  vec_perm(vec_ld(0, (const_cast<double *>(((*xyBase)[0][0][0] + offs[1])))-1), vec_splats(*((*xyBase)[0][0][0] + offs[0])),  _v4d_int2mask(1));


psi_S0_IM =  vec_perm(vec_ld(0, (const_cast<double *>(((*xyBase)[0][0][1] + offs[1])))-1), vec_splats(*((*xyBase)[0][0][1] + offs[0])),  _v4d_int2mask(1));


psi_S1_RE =  vec_perm(vec_ld(0, (const_cast<double *>(((*xyBase)[0][3][0] + offs[1])))-1), vec_splats(*((*xyBase)[0][3][0] + offs[0])),  _v4d_int2mask(1));


psi_S1_IM =  vec_perm(vec_ld(0, (const_cast<double *>(((*xyBase)[0][3][1] + offs[1])))-1), vec_splats(*((*xyBase)[0][3][1] + offs[0])),  _v4d_int2mask(1));

b_S0_C0_RE = vec_sub(psi_S0_RE , psi_S1_IM );
b_S0_C0_IM = vec_add( psi_S0_IM , psi_S1_RE );

psi_S0_RE =  vec_perm(vec_ld(0, (const_cast<double *>(((*xyBase)[1][0][0] + offs[1])))-1), vec_splats(*((*xyBase)[1][0][0] + offs[0])),  _v4d_int2mask(1));


psi_S0_IM =  vec_perm(vec_ld(0, (const_cast<double *>(((*xyBase)[1][0][1] + offs[1])))-1), vec_splats(*((*xyBase)[1][0][1] + offs[0])),  _v4d_int2mask(1));


psi_S1_RE =  vec_perm(vec_ld(0, (const_cast<double *>(((*xyBase)[1][3][0] + offs[1])))-1), vec_splats(*((*xyBase)[1][3][0] + offs[0])),  _v4d_int2mask(1));


psi_S1_IM =  vec_perm(vec_ld(0, (const_cast<double *>(((*xyBase)[1][3][1] + offs[1])))-1), vec_splats(*((*xyBase)[1][3][1] + offs[0])),  _v4d_int2mask(1));

b_S0_C1_RE = vec_sub(psi_S0_RE , psi_S1_IM );
b_S0_C1_IM = vec_add( psi_S0_IM , psi_S1_RE );

psi_S0_RE =  vec_perm(vec_ld(0, (const_cast<double *>(((*xyBase)[2][0][0] + offs[1])))-1), vec_splats(*((*xyBase)[2][0][0] + offs[0])),  _v4d_int2mask(1));


psi_S0_IM =  vec_perm(vec_ld(0, (const_cast<double *>(((*xyBase)[2][0][1] + offs[1])))-1), vec_splats(*((*xyBase)[2][0][1] + offs[0])),  _v4d_int2mask(1));


psi_S1_RE =  vec_perm(vec_ld(0, (const_cast<double *>(((*xyBase)[2][3][0] + offs[1])))-1), vec_splats(*((*xyBase)[2][3][0] + offs[0])),  _v4d_int2mask(1));


psi_S1_IM =  vec_perm(vec_ld(0, (const_cast<double *>(((*xyBase)[2][3][1] + offs[1])))-1), vec_splats(*((*xyBase)[2][3][1] + offs[0])),  _v4d_int2mask(1));

b_S0_C2_RE = vec_sub(psi_S0_RE , psi_S1_IM );
b_S0_C2_IM = vec_add( psi_S0_IM , psi_S1_RE );

psi_S0_RE =  vec_perm(vec_ld(0, (const_cast<double *>(((*xyBase)[0][1][0] + offs[1])))-1), vec_splats(*((*xyBase)[0][1][0] + offs[0])),  _v4d_int2mask(1));


psi_S0_IM =  vec_perm(vec_ld(0, (const_cast<double *>(((*xyBase)[0][1][1] + offs[1])))-1), vec_splats(*((*xyBase)[0][1][1] + offs[0])),  _v4d_int2mask(1));


psi_S1_RE =  vec_perm(vec_ld(0, (const_cast<double *>(((*xyBase)[0][2][0] + offs[1])))-1), vec_splats(*((*xyBase)[0][2][0] + offs[0])),  _v4d_int2mask(1));


psi_S1_IM =  vec_perm(vec_ld(0, (const_cast<double *>(((*xyBase)[0][2][1] + offs[1])))-1), vec_splats(*((*xyBase)[0][2][1] + offs[0])),  _v4d_int2mask(1));

b_S1_C0_RE = vec_sub(psi_S0_RE , psi_S1_IM );
b_S1_C0_IM = vec_add( psi_S0_IM , psi_S1_RE );

psi_S0_RE =  vec_perm(vec_ld(0, (const_cast<double *>(((*xyBase)[1][1][0] + offs[1])))-1), vec_splats(*((*xyBase)[1][1][0] + offs[0])),  _v4d_int2mask(1));


psi_S0_IM =  vec_perm(vec_ld(0, (const_cast<double *>(((*xyBase)[1][1][1] + offs[1])))-1), vec_splats(*((*xyBase)[1][1][1] + offs[0])),  _v4d_int2mask(1));


psi_S1_RE =  vec_perm(vec_ld(0, (const_cast<double *>(((*xyBase)[1][2][0] + offs[1])))-1), vec_splats(*((*xyBase)[1][2][0] + offs[0])),  _v4d_int2mask(1));


psi_S1_IM =  vec_perm(vec_ld(0, (const_cast<double *>(((*xyBase)[1][2][1] + offs[1])))-1), vec_splats(*((*xyBase)[1][2][1] + offs[0])),  _v4d_int2mask(1));

b_S1_C1_RE = vec_sub(psi_S0_RE , psi_S1_IM );
b_S1_C1_IM = vec_add( psi_S0_IM , psi_S1_RE );

psi_S0_RE =  vec_perm(vec_ld(0, (const_cast<double *>(((*xyBase)[2][1][0] + offs[1])))-1), vec_splats(*((*xyBase)[2][1][0] + offs[0])),  _v4d_int2mask(1));


psi_S0_IM =  vec_perm(vec_ld(0, (const_cast<double *>(((*xyBase)[2][1][1] + offs[1])))-1), vec_splats(*((*xyBase)[2][1][1] + offs[0])),  _v4d_int2mask(1));


psi_S1_RE =  vec_perm(vec_ld(0, (const_cast<double *>(((*xyBase)[2][2][0] + offs[1])))-1), vec_splats(*((*xyBase)[2][2][0] + offs[0])),  _v4d_int2mask(1));


psi_S1_IM =  vec_perm(vec_ld(0, (const_cast<double *>(((*xyBase)[2][2][1] + offs[1])))-1), vec_splats(*((*xyBase)[2][2][1] + offs[0])),  _v4d_int2mask(1));

b_S1_C2_RE = vec_sub(psi_S0_RE , psi_S1_IM );
b_S1_C2_IM = vec_add( psi_S0_IM , psi_S1_RE );
vec_sts(vec_promote(vec_extract(b_S0_C0_RE,0), 0), 0, (((outbuf)+0)+0));

vec_sts(vec_promote(vec_extract(b_S0_C0_IM,0), 0), 0, (((outbuf)+1)+0));

vec_sts(vec_promote(vec_extract(b_S0_C1_RE,0), 0), 0, (((outbuf)+2)+0));

vec_sts(vec_promote(vec_extract(b_S0_C1_IM,0), 0), 0, (((outbuf)+3)+0));

vec_sts(vec_promote(vec_extract(b_S0_C2_RE,0), 0), 0, (((outbuf)+4)+0));

vec_sts(vec_promote(vec_extract(b_S0_C2_IM,0), 0), 0, (((outbuf)+5)+0));

vec_sts(vec_promote(vec_extract(b_S1_C0_RE,0), 0), 0, (((outbuf)+6)+0));

vec_sts(vec_promote(vec_extract(b_S1_C0_IM,0), 0), 0, (((outbuf)+7)+0));

vec_sts(vec_promote(vec_extract(b_S1_C1_RE,0), 0), 0, (((outbuf)+8)+0));

vec_sts(vec_promote(vec_extract(b_S1_C1_IM,0), 0), 0, (((outbuf)+9)+0));

vec_sts(vec_promote(vec_extract(b_S1_C2_RE,0), 0), 0, (((outbuf)+10)+0));

vec_sts(vec_promote(vec_extract(b_S1_C2_IM,0), 0), 0, (((outbuf)+11)+0));

